# На вход программе подается натуральное число nn. Напишите программу, которая создает матрицу размером n \times nn×n и заполняет её по следующему правилу:
#
# числа на побочной диагонали равны 11;
# числа, стоящие выше этой диагонали, равны 00;
# числа, стоящие ниже этой диагонали, равны 22.
# Полученную матрицу выведите на экран. Числа в строке разделяйте одним пробелом.
#
# Формат входных данных
# На вход программе подается натуральное число nn — количество строк и столбцов в матрице.
#
# Формат выходных данных
# Программа должна вывести матрицу в соответствии с условием задачи.
#
# Примечание. Побочная диагональ — это диагональ, идущая из правого верхнего в левый нижний угол матрицы.

n = int(input())
matrix = []
for i in range(n):
    row = []
    for j in range(n):
        if i + j == n - 1:
            row.append('1')
        elif i + j >= n:
            row.append('2')
        else:
            row.append('0')
    matrix.append(row)
for row in matrix:
    print(*row)
